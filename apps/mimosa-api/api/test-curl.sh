#!/bin/bash

# Script de test avec curl pour d√©montrer l'utilisation du header X-Fake-IP
# Usage: ./test-curl.sh

echo "üß™ Test de simulation d'IP avec curl et header X-Fake-IP"
echo "========================================================"
echo ""

# V√©rifier que le serveur est en cours d'ex√©cution
echo "1Ô∏è‚É£ V√©rification du serveur..."
if ! curl -s http://localhost:8080/api/config > /dev/null; then
    echo "‚ùå Serveur non accessible sur http://localhost:8080"
    echo "   D√©marrez d'abord le serveur avec: npm start"
    exit 1
fi
echo "‚úÖ Serveur accessible"
echo ""

# Test 1: Requ√™te normale (sans header)
echo "2Ô∏è‚É£ Test IP normale (sans header X-Fake-IP):"
curl -s -w "Status: %{http_code}\n" http://localhost:8080/api/data
echo ""

# Test 2: IP simul√©e
echo "3Ô∏è‚É£ Test IP simul√©e '192.168.1.100':"
curl -s -w "Status: %{http_code}\n" -H "X-Fake-IP: 192.168.1.100" http://localhost:8080/api/data
echo ""

# Test 3: IP simul√©e diff√©rente
echo "4Ô∏è‚É£ Test IP simul√©e '10.0.0.1':"
curl -s -w "Status: %{http_code}\n" -H "X-Fake-IP: 10.0.0.1" http://localhost:8080/api/data
echo ""

# Test 4: D√©clenchement du limiteur avec IP simul√©e
echo "5Ô∏è‚É£ Test d√©clenchement limiteur avec IP simul√©e '10.0.0.99':"
echo "   Envoi de 15 requ√™tes rapides..."

for i in {1..15}; do
    echo -n "   Requ√™te $i: "
    response=$(curl -s -w "%{http_code}" -H "X-Fake-IP: 10.0.0.99" http://localhost:8080/api/data)
    status=${response: -3}
    body=${response%???}
    
    if [ "$status" = "200" ]; then
        echo "OK"
    elif [ "$status" = "429" ]; then
        echo "BLOQU√â! $(echo $body | jq -r '.message // "Rate limited"')"
        break
    else
        echo "Erreur $status"
    fi
    
    sleep 0.1
done
echo ""

# Test 5: Diversit√© de chemins
echo "6Ô∏è‚É£ Test diversit√© de chemins avec IP '10.0.0.88':"
paths=("/api/data" "/api/noisy/1" "/api/noisy/2" "/api/noisy/3" "/api/noisy/4" "/api/noisy/5")

for path in "${paths[@]}"; do
    echo -n "   $path: "
    response=$(curl -s -w "%{http_code}" -H "X-Fake-IP: 10.0.0.88" "http://localhost:8080$path")
    status=${response: -3}
    body=${response%???}
    
    if [ "$status" = "200" ]; then
        echo "OK"
    elif [ "$status" = "429" ]; then
        echo "BLOQU√â! $(echo $body | jq -r '.message // "Rate limited"')"
        break
    else
        echo "Erreur $status"
    fi
    
    sleep 0.2
done
echo ""

# Test 6: √âtat des IPs
echo "7Ô∏è‚É£ √âtat actuel des IPs (dashboard):"
curl -s http://localhost:8080/api/state | jq '.items[] | {ip: .ip, rps: .rps, tripped: .tripped, ttlMs: .ttlMs, reason: .reason}'
echo ""

echo "‚úÖ Tests termin√©s!"
echo ""
echo "üí° Conseils:"
echo "   - V√©rifiez les logs du serveur pour voir les IPs simul√©es"
echo "   - Le dashboard √† http://localhost:8080 montre l'√©tat des IPs"
echo "   - Les IPs simul√©es sont trait√©es ind√©pendamment des vraies IPs"
echo "   - Utilisez 'X-Fake-IP: <ip>' dans vos requ√™tes pour simuler"
